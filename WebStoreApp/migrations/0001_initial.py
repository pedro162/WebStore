# Generated by Django 4.2.7 on 2024-06-26 14:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Branch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                ("name", models.CharField(max_length=500)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                ("name", models.CharField(max_length=500)),
                (
                    "code",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "acronym",
                    models.CharField(
                        blank=True, default=None, max_length=50, null=True
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Gender",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="The gender's name", max_length=255),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        help_text="The person's first name", max_length=255
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="The person's last name",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "social_name",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="The person's social name",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "document",
                    models.CharField(
                        help_text="The person's document, like the person ID",
                        max_length=255,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PersonAdress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                ("street", models.CharField(max_length=500)),
                (
                    "zip_code",
                    models.CharField(
                        blank=True, default=None, max_length=500, null=True
                    ),
                ),
                (
                    "neighborhood",
                    models.CharField(
                        blank=True, default=None, max_length=500, null=True
                    ),
                ),
                (
                    "complement",
                    models.CharField(
                        blank=True, default=None, max_length=500, null=True
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True, default=None, max_length=500, null=True
                    ),
                ),
                (
                    "city_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WebStoreApp.city",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="The product's name", max_length=255),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The stock's name", max_length=255, null=True
                    ),
                ),
                (
                    "available_quantity",
                    models.DecimalField(
                        decimal_places=6,
                        default=0,
                        help_text="Available quantity in stock",
                        max_digits=60,
                        null=True,
                    ),
                ),
                (
                    "blocked_quantity",
                    models.DecimalField(
                        decimal_places=6,
                        default=0,
                        help_text="Blocked quantity in stock",
                        max_digits=60,
                        null=True,
                    ),
                ),
                (
                    "reserved_quantity",
                    models.DecimalField(
                        decimal_places=6,
                        default=0,
                        help_text="Reserved quantity in stock",
                        max_digits=60,
                        null=True,
                    ),
                ),
                (
                    "damaged_quantity",
                    models.DecimalField(
                        decimal_places=6,
                        default=0,
                        help_text="Damaged quantity in stock",
                        max_digits=60,
                        null=True,
                    ),
                ),
                (
                    "fiscal_quantity",
                    models.DecimalField(
                        decimal_places=6,
                        default=0,
                        help_text="Fiscal quantity in stock",
                        max_digits=60,
                        null=True,
                    ),
                ),
                (
                    "is_default",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")],
                        default=0,
                        help_text="The default stock",
                        max_length=1,
                    ),
                ),
                (
                    "branch_id",
                    models.ForeignKey(
                        help_text="The branch table id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WebStoreApp.branch",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.CharField(help_text="The user's email", max_length=500),
                ),
                (
                    "password",
                    models.CharField(help_text="The user's password", max_length=255),
                ),
                (
                    "verified_user",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="StockInventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                (
                    "previous_quantity",
                    models.DecimalField(
                        decimal_places=6,
                        default=0,
                        help_text="Previous quantity in stock",
                        max_digits=60,
                        null=True,
                    ),
                ),
                (
                    "moved_quantity",
                    models.DecimalField(
                        decimal_places=6,
                        default=0,
                        help_text="Moved quantity in stock",
                        max_digits=60,
                        null=True,
                    ),
                ),
                (
                    "current_quantity",
                    models.DecimalField(
                        decimal_places=6,
                        default=0,
                        help_text="Current quantity in stock",
                        max_digits=60,
                        null=True,
                    ),
                ),
                (
                    "inventory_type",
                    models.IntegerField(
                        choices=[("1", "Incoming"), ("0", "Outgoing")],
                        help_text="Type of stock inventory",
                        max_length=1,
                    ),
                ),
                (
                    "reference",
                    models.IntegerField(
                        default=None,
                        help_text="The origin of the stock inventory, can be a table name",
                        null=True,
                    ),
                ),
                (
                    "reference_id",
                    models.IntegerField(
                        default=None,
                        help_text="The origin id of the stock inventory, can be a table id",
                        null=True,
                    ),
                ),
                (
                    "created_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "deleted_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "stock_id",
                    models.ForeignKey(
                        help_text="The stock table id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WebStoreApp.stock",
                    ),
                ),
                (
                    "updated_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="stock",
            name="created_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="deleted_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deleted_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="product_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="WebStoreApp.product"
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="updated_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="updated_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                ("name", models.CharField(max_length=500)),
                (
                    "code",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "country_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WebStoreApp.country",
                    ),
                ),
                (
                    "created_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "deleted_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "updated_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Sale",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                (
                    "sale_total",
                    models.DecimalField(
                        decimal_places=6,
                        default=0,
                        help_text="Total gross sales value amount, only products",
                        max_digits=60,
                        null=True,
                    ),
                ),
                (
                    "sale_discount",
                    models.DecimalField(
                        decimal_places=6,
                        default=0,
                        help_text="Sale discount amount",
                        max_digits=60,
                        null=True,
                    ),
                ),
                (
                    "sale_shipping",
                    models.DecimalField(
                        decimal_places=6,
                        default=0,
                        help_text="Sale shipping amount",
                        max_digits=60,
                        null=True,
                    ),
                ),
                (
                    "sale_net_amount",
                    models.DecimalField(
                        decimal_places=6,
                        default=0,
                        help_text="Total sale amount: product-discount+frete",
                        max_digits=60,
                        null=True,
                    ),
                ),
                (
                    "branch_id",
                    models.ForeignKey(
                        help_text="The branch table s id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WebStoreApp.branch",
                    ),
                ),
                (
                    "created_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "deleted_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "person_address_id",
                    models.ForeignKey(
                        help_text="The person table address's id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WebStoreApp.personadress",
                    ),
                ),
                (
                    "person_id",
                    models.ForeignKey(
                        help_text="The person table id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WebStoreApp.person",
                    ),
                ),
                (
                    "updated_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductUnit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                ("name", models.CharField(help_text="The unit's name", max_length=255)),
                (
                    "created_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "deleted_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "updated_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductPackage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="The package's name", max_length=255),
                ),
                (
                    "convert_quantity",
                    models.DecimalField(
                        decimal_places=6,
                        default=1,
                        help_text="The convert quantity's value",
                        max_digits=60,
                    ),
                ),
                (
                    "created_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "deleted_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "product_unit_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WebStoreApp.productunit",
                    ),
                ),
                (
                    "updated_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductDepartment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="The depart's name", max_length=255),
                ),
                (
                    "created_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "deleted_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "updated_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="The category's name", max_length=255),
                ),
                (
                    "created_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "deleted_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "product_category_id",
                    models.ForeignKey(
                        blank=True,
                        help_text="The product category table id",
                        null=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WebStoreApp.productcategory",
                    ),
                ),
                (
                    "product_depart_id",
                    models.ForeignKey(
                        help_text="The product department table id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="WebStoreApp.productdepartment",
                    ),
                ),
                (
                    "updated_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductBrand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "active",
                    models.IntegerField(
                        choices=[("1", "Yes"), ("0", "No")], max_length=1
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="The brand's name", max_length=255),
                ),
                (
                    "created_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "deleted_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
                (
                    "updated_by_user_id",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_%(class)s_set",
                        to="WebStoreApp.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="product",
            name="created_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="deleted_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deleted_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_brand_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="WebStoreApp.productbrand",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_category_id",
            field=models.ForeignKey(
                help_text="The product category table id",
                on_delete=django.db.models.deletion.CASCADE,
                to="WebStoreApp.productcategory",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="updated_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="updated_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="personadress",
            name="created_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="personadress",
            name="deleted_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deleted_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="personadress",
            name="updated_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="updated_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="person",
            name="created_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="person",
            name="deleted_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deleted_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="person",
            name="gender_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="WebStoreApp.gender"
            ),
        ),
        migrations.AddField(
            model_name="person",
            name="updated_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="updated_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="gender",
            name="created_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="gender",
            name="deleted_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deleted_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="gender",
            name="updated_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="updated_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="country",
            name="created_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="country",
            name="deleted_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deleted_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="country",
            name="updated_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="updated_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="city",
            name="created_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="city",
            name="deleted_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deleted_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="city",
            name="state_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="WebStoreApp.state"
            ),
        ),
        migrations.AddField(
            model_name="city",
            name="updated_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="updated_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="branch",
            name="created_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="branch",
            name="deleted_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deleted_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
        migrations.AddField(
            model_name="branch",
            name="person_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="WebStoreApp.person"
            ),
        ),
        migrations.AddField(
            model_name="branch",
            name="root_id",
            field=models.ForeignKey(
                blank=True,
                help_text="The root branch id",
                null=None,
                on_delete=django.db.models.deletion.CASCADE,
                to="WebStoreApp.branch",
            ),
        ),
        migrations.AddField(
            model_name="branch",
            name="updated_by_user_id",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="updated_%(class)s_set",
                to="WebStoreApp.user",
            ),
        ),
    ]
